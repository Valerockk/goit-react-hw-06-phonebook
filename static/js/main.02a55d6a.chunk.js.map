{"version":3,"sources":["redux/contacts/contactsActions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["addContact","createAction","name","number","payload","contact","id","uuid","removeContact","changeFilter","ContactForm","state","handleSubmit","e","preventDefault","props","onAddContact","setState","handlechange","target","value","onSubmit","this","className","styles","ContactForm_label","type","onChange","ContactForm_input","placeholder","ContactForm_btn","Component","mapDispatchToProps","contactsActions","connect","dispatch","ownprops","onRemove","ContactList_item","onClick","ContactList_item_btn","ContactList","contacts","map","prototype","PropTypes","arrayOf","exact","string","isRequired","onRemoveContact","func","normilizedFilter","filter","toLowerCase","includes","Filter","onChangeFilter","App","createReducer","action","task","combineReducers","rootReducer","contactsReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.02a55d6a.chunk.js","sourcesContent":["// import contactsActionsTypes from \"./contactsActionsTypes\";\nimport { createAction } from \"@reduxjs/toolkit\";\nimport uuid from \"react-uuid\";\n\n//Обычный Redux\n// const addContact = (name, number) => ({\n//   type: contactsActionsTypes.ADD,\n//   payload: {\n//     contact: {\n//       id: uuid(),\n//       name,\n//       number,\n//     },\n//   },\n// });\n\n// const removeContact = (taskId) => ({\n//   type: contactsActionsTypes.REMOVE,\n//   payload: { taskId },\n// });\n\n// const changeFilter = (filter) => ({\n//   type: contactsActionsTypes.CHANGE_FILTER,\n//   payload: { filter },\n// });\n\n//Redux Toolkit\nconst addContact = createAction(\"contacts/add\", (name, number) => ({\n  payload: {\n    contact: {\n      id: uuid(),\n      name,\n      number,\n    },\n  },\n}));\nconst removeContact = createAction(\"contacts/remove\");\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nexport default {\n  addContact,\n  removeContact,\n  changeFilter,\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onAddContact(this.state.name, this.state.number);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  handlechange = (e) => {\n    const { name } = e.target;\n\n    this.setState({ [name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.ContactForm}>\n        <label className={styles.ContactForm_label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handlechange}\n            className={styles.ContactForm_input}\n          />\n        </label>\n\n        <label className={styles.ContactForm_label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handlechange}\n            placeholder=\"Example +380440000000\"\n            className={styles.ContactForm_input}\n          />\n        </label>\n\n        <button type=\"submit\" className={styles.ContactForm_btn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onAddContact: contactsActions.addContact,\n};\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./ContactList.module.css\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\nimport PropTypes from \"prop-types\";\n\nconst ContactListItem = ({ name, number, id, onRemove }) => (\n  <li className={styles.ContactList_item}>\n    <p>\n      - {name}: {number}\n    </p>\n    <button\n      type=\"button\"\n      onClick={onRemove}\n      className={styles.ContactList_item_btn}\n    >\n      Delete\n    </button>\n  </li>\n);\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch, ownprops) => ({\n  onRemove: () => dispatch(contactsActions.removeContact(ownprops.id)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactListItem);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport ContactListItem from \"./ContactListItem\";\nimport styles from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactList = ({ contacts }) => (\n  <ul className={styles.ContactList}>\n    {contacts.map(({ id, name, number }) => (\n      <ContactListItem key={id} name={name} number={number} id={id} />\n    ))}\n  </ul>\n);\n\nContactList.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onRemoveContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { contact, filter } = state.contacts;\n  const normilizedFilter = filter.toLowerCase();\n\n  const visibleTask = contact.filter((contact) =>\n    contact.name.toLowerCase().includes(normilizedFilter)\n  );\n\n  return {\n    contacts: visibleTask,\n  };\n};\n\nexport default connect(mapStateToProps)(ContactList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter.filter,\n});\n\nconst mapDispatchToProps = {\n  onChangeFilter: contactsActions.changeFilter,\n};\n\nFilter.prototype = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\n\nconst App = () => {\n  return (\n    <div>\n      <h1>PhoneBook</h1>\n      <ContactForm />\n      <Filter />\n      <h2>Contacts</h2>\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\n// import actionsTypes from \"./contactsActionsTypes\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsActions from \"./contactsActions\";\n\n//Обычный Redux\n// const contact = (\n//   state = [\n//     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//     { id: \"id-2\", name: \"Hermion Kline\", number: \"443-89-12\" },\n//     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//   ],\n//   { type, payload }\n// ) => {\n//   switch (type) {\n//     case actionsTypes.ADD:\n//       return [...state, payload.contact];\n\n//     case actionsTypes.REMOVE:\n//       return state.filter((contact) => contact.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case actionsTypes.CHANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\n//Redux Toolkit\nconst addContact = (\n  state = [\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermion Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ],\n  action\n) => {\n  return [...state, action.payload.contact];\n};\n\nconst removeContact = (state, action) => {\n  return state.filter((contact) => contact.id !== action.payload);\n};\n\nconst changeFilter = (state, action) => {\n  return state.filter((task) => task.id !== action.payload);\n};\n\nconst contact = createReducer([], {\n  [contactsActions.addContact]: addContact,\n  [contactsActions.removeContact]: removeContact,\n  [contactsActions.changeFilter]: changeFilter,\n});\n\nconst filter = createReducer(\"\", {\n  [contactsActions.changeFilter]: (state, action) => action.payload,\n});\n\nexport default combineReducers({\n  contact,\n  filter,\n});\n","import { createStore, combineReducers } from \"redux\";\nimport contactsReducer from \"./contacts/contactsReducer\";\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1zvAA\",\"ContactForm_label\":\"ContactForm_ContactForm_label__3P8Ek\",\"ContactForm_input\":\"ContactForm_ContactForm_input__2HggA\",\"ContactForm_btn\":\"ContactForm_ContactForm_btn__2DSYP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__4TvGi\",\"ContactList_item\":\"ContactList_ContactList_item__1wR0Z\",\"ContactList_item_btn\":\"ContactList_ContactList_item_btn__yspio\"};"],"sourceRoot":""}